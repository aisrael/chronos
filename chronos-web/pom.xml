<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>Chronos Web</name>

  <groupId>chronos.chronos</groupId>
  <artifactId>chronos-web</artifactId>
  <packaging>war</packaging>

  <parent>
    <groupId>chronos</groupId>
    <artifactId>chronos</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <dependencies>

    <dependency>
      <groupId>chronos.chronos</groupId>
      <artifactId>chronos-core</artifactId>
      <version>0.1-SNAPSHOT</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>opensymphony</groupId>
          <artifactId>quartz</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>chronos.chronos</groupId>
      <artifactId>chronos-beans</artifactId>
      <version>0.1-SNAPSHOT</version>
      <type>ejb</type>
      <scope>provided</scope>
    </dependency>

    <!--
      Core utilities used by other modules. Define this if you use
      Spring Utility APIs
      (org.springframework.core.*/org.springframework.util.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--
      Core utilities used by other modules. Define this if you use
      Spring Utility APIs
      (org.springframework.core.*/org.springframework.util.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-asm</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--
      Expression Language (depends on spring-core) Define this if you
      use Spring Expression APIs (org.springframework.expression.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      Bean Factory and JavaBeans utilities (depends on spring-core)
      Define this if you use Spring Bean APIs
      (org.springframework.beans.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      Aspect Oriented Programming (AOP) Framework (depends on
      spring-core, spring-beans) Define this if you use Spring AOP APIs
      (org.springframework.aop.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      Application Context (depends on spring-core, spring-expression,
      spring-aop, spring-beans) This is the central artifact for
      Spring's Dependency Injection Container and is generally always
      defined
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      Various Application Context utilities, including EhCache,
      JavaMail, Quartz, and Freemarker integration Define this if you
      need any of these integrations
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      Transaction Management Abstraction (depends on spring-core,
      spring-beans, spring-aop, spring-context) Define this if you use
      Spring Transactions or DAO Exception Hierarchy
      (org.springframework.transaction.*/org.springframework.dao.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      JDBC Data Access Library (depends on spring-core, spring-beans,
      spring-context, spring-tx) Define this if you use Spring's
      JdbcTemplate API (org.springframework.jdbc.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA,
      and iBatis. (depends on spring-core, spring-beans, spring-context,
      spring-tx) Define this if you need ORM (org.springframework.orm.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      Object-to-XML Mapping (OXM) abstraction and integration with JAXB,
      JiBX, Castor, XStream, and XML Beans. (depends on spring-core,
      spring-beans, spring-context) Define this if you need OXM
      (org.springframework.oxm.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      Web application development utilities applicable to both Servlet
      and Portlet Environments (depends on spring-core, spring-beans,
      spring-context) Define this if you use Spring MVC, or wish to use
      Struts, JSF, or another web framework with Spring
      (org.springframework.web.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      Spring MVC for Servlet Environments (depends on spring-core,
      spring-beans, spring-context, spring-web) Define this if you use
      Spring MVC with a Servlet Container such as Apache Tomcat
      (org.springframework.web.servlet.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      Spring MVC for Portlet Environments (depends on spring-core,
      spring-beans, spring-context, spring-web) Define this if you use
      Spring MVC with a Portlet Container
      (org.springframework.web.portlet.*)
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc-portlet</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--
      Support for testing Spring applications with tools such as JUnit
      and TestNG This artifact is generally always defined with a 'test'
      scope for the integration testing framework and unit testing stubs
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Commons logging -->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
      <scope>provided</scope>
    </dependency>

    <!--
      J2EE foundation classes
    -->
    <!-- Servlet API -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <!-- JavaEE 5.0 -->
    <dependency>
      <groupId>javaee</groupId>
      <artifactId>javaee-api</artifactId>
      <version>5</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>
  <build>
    <plugins>
      <!--
        Configure the Maven Checkstyle plugin <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId> <configuration>
        <configLocation>${project.basedir}/etc/checkstyle.xml</configLocation>
        <consoleOutput>true</consoleOutput>
        <propertyExpansion>config_loc=${project.basedir}/etc</propertyExpansion>
        <failsOnError>true</failsOnError> </configuration> <executions>
        <execution> <phase>process-sources</phase> <goals>
        <goal>check</goal> </goals> <configuration>
        <failOnViolation>true</failOnViolation>
        <violationSeverity>warning</violationSeverity> </configuration>
        </execution> </executions> </plugin>
      -->
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

  <profiles>
    <profile>
      <id>jcl-jdk14</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <jcl.logger>org.apache.commons.logging.impl.Jdk14Logger
        </jcl.logger>
      </properties>
    </profile>

    <profile>
      <id>jcl-log4j</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <jcl.logger>org.apache.commons.logging.impl.Log4JLogger
        </jcl.logger>
      </properties>
    </profile>
  </profiles>

</project>
